{"version":3,"sources":["actions/index.js","reducers/selectors.js","explore-media/components/FilterButton.js","explore-media/components/TagSearch.js","explore-media/components/MovieResultGrid.js","dashboard/components/MovieSearchCard.js","dashboard/components/PlainHtml5Viewr.js","dashboard/components/RaspberryStatsView.js","dashboard/index.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["SET_TAGS","DID_SELECT_MOVIE","SET_PI_CLUSTER_HISTORY","SET_SEARCH_RESULTS","SearchResultsSelector","state","key","includes","search","TagsSelector","createSelector","root","tags","PiHistorySelector","history","pi","CurrentSelectedMovieSelector","selectedmovie","SpecialButton","props","value","setValue","React","useState","varient","updateVarientEnum","styles","css","getColorOnValue","className","onClick","newValue","label","connect","dispatch","setSearchResults","results","console","log","type","payload","setSearchResultsAction","checked","setChecked","useSelector","postSearchRequest","query","querystuff","andtags","length","join","ortags","axios","get","queryString","stringify","then","res","data","a","j","x","i","Math","floor","random","shuffle","catch","e","TagButtons","useMemo","map","tag","index","tagid","tagname","v","newState","Button","color","Object","keys","filter","forEach","push","columns","field","headerName","width","CurrentSearchResultsTypeSelector","items","didSelectMovie","movie","didSelectMovieAction","style","height","rows","onSelectionModelChange","newSelection","MovieSearchTabRouter","route","TagSearch","setCurrentSearchResultType","selectedTabBarItem","tabBarChange","Card","sx","BottomNavigation","showLabels","onChange","event","BottomNavigationAction","icon","disabled","selectedvideo","isWatching","toggleIsWatching","useEffect","size","movie_size","path","filename","controls","src","Navbar","useHistory","Restore","MiorrorNavBar","mirrorContainer","url","window","location","href","Dashboard","isLoadingCommercial","createBrowserHistory","bind","handleLoadTags","handleLoadPiHistory","this","handleLoadUserHistory","Grid","container","spacing","item","xs","sessionStorage","getItem","self","fetch","json","setPiHistory","setTags","Component","setTagsAction","setRelatedContent","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","nextTagPage","combineReducers","action","stat","datearr","Date","parseInt","date","toString","split","id","processuptime","toFixed","osuptime","currentType","next","movieid","ReactDOM","render","StrictMode","store","createStore","RootReducer","document","getElementById"],"mappings":"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","file":"static/js/main.416a01aa.chunk.js","sourcesContent":["const SET_TAGS = \"TAGS_SET\"\n\nconst setTagsAction = (tags) => ({\n  type: SET_TAGS,\n  payload: tags,\n})\n\nconst DID_SELECT_MOVIE  = \"SELECTED_MOVIE_TO_WATCH\"\n\nconst didSelectMovieAction = (movie) => ({\n  type: DID_SELECT_MOVIE,\n  payload: movie,\n})\n\nconst SET_PI_CLUSTER_HISTORY = \"HISTORY_SET_PI_CLUSTER\"\n\nconst setPiHistoryAction = (arr) => {\n  return {\n    type: SET_PI_CLUSTER_HISTORY,\n    payload: arr\n  }\n}\n\nconst SET_SEARCH_RESULT_TYPE = \"SEARCH_SET_TYPE\"\nconst SET_SEARCH_RESULTS = \"SEARCH_SET_RESULTS\"\n\n\n\nconst setCurrentSearchResultTypeAction = (value) => {\n  const strs = [\"filtered\",\"random\",\"popular\",\"atoz\"]\n  return {\n    type: SET_SEARCH_RESULT_TYPE,\n    payload: strs[value]\n  }\n}\n\nconst setSearchResultsAction = (results) => {\n  console.log(\"setting search results\");\n  return {\n    type: SET_SEARCH_RESULTS,\n    payload: results,\n  }\n}\n\n\n\nexport {\n\n  setTagsAction,\n  setSearchResultsAction,\n  DID_SELECT_MOVIE,\n  SET_TAGS,\n  SET_PI_CLUSTER_HISTORY,\n  SET_SEARCH_RESULT_TYPE,\n  SET_SEARCH_RESULTS,\n  didSelectMovieAction,\nsetCurrentSearchResultTypeAction,\n  setPiHistoryAction\n}\n","\nimport { createSelector } from 'reselect'\n\n\nfunction SearchResultsSelector(state,key){\n  if([\"random\",\"popular\",\"atoz\",\"filtered\",\"related\"].includes(key)){\n    return state.search[key]\n  }\n  else {\n    return undefined\n  }\n}\n\n\nconst TagsSelector = createSelector(\n  (state) => state.root,\n  (root) => root.tags\n)\n\nfunction CurrentSearchResultsTypeSelector(state){\n  return state.search[\"currentType\"];\n}\n\nfunction PiHistorySelector(state){\n  return state.history.pi\n}\n\nfunction CurrentSelectedMovieSelector(state){\n  return state.root.selectedmovie;\n}\n\n\nexport {\n  CurrentSelectedMovieSelector,\nSearchResultsSelector,\nPiHistorySelector,\nCurrentSearchResultsTypeSelector,\nTagsSelector\n};\n","import React from 'react'\nimport { css, cx } from '@emotion/css'\n\nfunction SpecialButton(props){\n  const {value,setValue} = props;\n  const [varient,updateVarientEnum] = React.useState(0);\n  const getColorOnValue = (value) => {\n    switch(value) {\n      case 1:\n        return \"green\"\n      case 2:\n        return \"#a9203e\"\n      default:\n        return \"white\"\n    }\n  }\n  let styles = css`\n   color: ${varient ? '#fff' : 'blue'};\n   background-color: ${getColorOnValue(varient)};\n   flex-wrap: wrap;\n   padding: 8px;\n   margin: 5px;\n   overflow-y: auto;\n `;\n\n  return (\n    <button\n      className={styles}\n      onClick={function(){\n        let newValue = varient ? varient : 0\n          setValue((newValue+1)%3)\n          updateVarientEnum((newValue+1)%3)\n      }}>\n      {props.label}\n    </button>)\n}\n\n\nexport default SpecialButton\n","import React,{useState,useMemo} from 'react'\nimport {connect} from 'react-redux'\nimport axios from 'axios';\nimport queryString from \"query-string\"\n\n\nimport {TagsSelector} from \"../../reducers/selectors\"\nimport SpecialButton from \"./FilterButton\"\nimport {setSearchResultsAction} from \"../../actions\"\nimport {Button} from '@mui/material';\nimport { useSelector } from 'react-redux'\n\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nfunction TagSearchView(props){\n  const [checked,setChecked] = useState({})\n  const tags = useSelector(TagsSelector)\n\n  const postSearchRequest = (query) => {\n    let querystuff = {}\n    if(query.andtags.length > 0){\n      querystuff.andtags = query.andtags.join(\",\")\n    }\n    if(query.ortags.length > 0 ){\n      querystuff.ortags = query.ortags.join(\",\")\n    }\n    if(query.ortags.length > 0 || query.andtags.length > 0 ){\n      axios.get(`/api/search/movies?${queryString.stringify(querystuff)}`)\n      .then(function(res){\n        console.log(res.data);\n        props.setSearchResults(shuffle(res.data))\n      })\n      .catch((e)=>{})\n    }\n  }\n  const TagButtons = useMemo(()=> {\n    console.log(\"RERENDERING TAGS\");\n    return tags.map(function(tag,index){\n      return  <SpecialButton\n      key={`tagname-${tag.tagid}`}\n      value={checked[tag.tagid]}\n      label={tag.tagname}\n      setValue={function(v){\n        let newState = {\n          ...checked\n        }\n        newState[`${tag.tagid}`] = v\n        setChecked(newState)\n      }}\n    />\n    })\n  }, [tags.length])\n\n  return (<>\n    <p> Red means AND, Green means OR</p>\n    <div\n\n   >\n    {tags.length > 0 && TagButtons }\n   </div>\n    <Button\n      varient=\"contained\"\n      color=\"success\"\n      onClick={function(){\n      let query = {\n        andtags: [],\n        ortags: [],\n      }\n      Object.keys(checked).filter(function(key){\n        return checked[key] > 0\n      }).forEach(function(key){\n        if(checked[key] == 1){\n          query.ortags.push(key)\n        }\n        else if(checked[key] == 2){\n          query.andtags.push(key)\n        }\n      })\n      postSearchRequest(query)\n    }} >Search</Button>\n   </>\n  );\n}\n\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    setSearchResults: (results) => dispatch(setSearchResultsAction(results)),\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(TagSearchView)\n","import React from 'react'\nimport {connect} from \"react-redux\"\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\nimport {\n  CurrentSelectedMovieSelector,\n  CurrentSearchResultsTypeSelector,\n  SearchResultsSelector} from \"../../reducers/selectors\"\nimport {Button} from '@mui/material';\nimport {didSelectMovieAction} from \"../../actions/index.js\"\n\nconst columns: GridColDef[] = [\n  { field: 'leecher', headerName: 'Leecher',width: 150 },\n  { field: 'title', headerName: 'Title',width: 300},\n  { field: 'epoch', headerName: 'Epoch',width: 150},\n  { field: 'size', headerName: '(GB)' },\n  { field: 'year', headerName: 'Year' },\n  { field: 'episode', headerName: 'Ep' },\n];\n\nfunction MovieGrid(props) {\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {props.items.length > 0 && <DataGrid\n        rows={props.items}\n        onSelectionModelChange={(newSelection) => {\n          props.didSelectMovie(props.items[newSelection[0]])\n        }}\n        columns={columns}\n        />}\n\n\n    </div>\n  );\n}\n//\nfunction mapStateToProps(state){\n  const type =  CurrentSearchResultsTypeSelector(state,SearchResultsSelector(state));\n  return {\n    items: SearchResultsSelector(state,type)\n  }\n}\nfunction mapDispatchToProps(dispatch){\n  return {\n    didSelectMovie: (movie) => dispatch(didSelectMovieAction(movie))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieGrid);\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\"\n\nimport {BottomNavigation,BottomNavigationAction, Card,\nFormControl,FormControlLabel} from '@mui/material';\n\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport StarOutlineIcon from '@mui/icons-material/StarOutline';\nimport StarIcon from '@mui/icons-material/Star';\nimport ListItem from '@mui/material/ListItem';\n\n\n\nimport {setCurrentSearchResultTypeAction,setSearchResults} from \"../../actions\"\nimport TagSearchView from \"../../explore-media/components/TagSearch\"\nimport MovieSearchResults from \"../../explore-media/components/MovieResultGrid\"\n\nfunction MovieSearchTabRouter(props){\n  const {route,tags} = props\n  switch(route){\n    case 0:\n      return (<TagSearchView />)\n    case 1:\n      return (<p>Random</p>)\n    case 2:\n      return (\n        <p>Popular</p>\n      )\n    default:\n      return (\n        <p>AtoZ</p>\n      )\n  }\n}\n\n\nfunction MovieSearchCard(props){\n  const [selectedTabBarItem,tabBarChange] = useState(0)\n\n  return (<Card sx={{ height: '100%' }}>{/*row  bottom /inset top inset?*/}\n    <MovieSearchTabRouter route={selectedTabBarItem} />\n    <MovieSearchResults />\n    <BottomNavigation\n      showLabels\n      value={\"Recents\"}\n      onChange={(event, newValue) => {\n        console.log(newValue);\n        tabBarChange(newValue);\n        props.setCurrentSearchResultType(newValue)\n      }}\n      >\n      <BottomNavigationAction label=\"Filter\" icon={<FilterAltIcon />} />\n      <BottomNavigationAction label=\"Random\" icon={<ShuffleIcon />} />\n      <BottomNavigationAction disabled label=\"Popular\" icon={<StarOutlineIcon color=\"disabled\"/>} />\n      <BottomNavigationAction disabled label=\"A-Z\" icon={<TimelineIcon color=\"disabled\"/>} />\n    </BottomNavigation>\n  </Card>);\n}\n\n\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    setCurrentSearchResultType: (type) => dispatch(setCurrentSearchResultTypeAction(type)),\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(MovieSearchCard);\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport queryString from \"query-string\"\n\n\nimport {CurrentSelectedMovieSelector} from \"../../reducers/selectors\"\n\n\n\nfunction PlainHtml5Viewr(props){\n  const [isWatching, toggleIsWatching] = React.useState(false);\n  React.useEffect(function(){\n    if(!!props.selectedvideo){\n      toggleIsWatching(false)\n    }\n  },[props.selectedvideo])\n\n  let query =  !!props.selectedvideo ? queryString.stringify({\n    size: props.selectedvideo.movie_size,\n    path: props.selectedvideo.filename\n  }) : null\n  return (\n    <div>\n      {!!props.selectedvideo && !isWatching && <div>\n        {Object.keys(props.selectedvideo).map(function(key){\n          return <div key={`video: ${key}`}><p>{props.selectedvideo[key]}</p></div>\n        })}\n        <button onClick={function(){ toggleIsWatching(true)}}>WatchNow!</button>\n        </div>\n      }\n      {!!props.selectedvideo && isWatching && <div>\n        <video controls width=\"100%\">\n        <source src={`/stream?${query}`}\n                type=\"video/mp4\" />\n        Sorry, your browser doesn't support embedded videos.\n        </video>\n        <button onClick={function(){ toggleIsWatching(false)}}>StopWatching</button>\n        </div>\n      }\n    </div>\n    )\n}\n\nfunction mapStateToProps(state){\n  return {\n    selectedvideo: CurrentSelectedMovieSelector(state),\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(PlainHtml5Viewr)\n","import React from 'react'\nimport {connect} from \"react-redux\"\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\nimport {PiHistorySelector} from \"../../reducers/selectors\";\n\n\nconst columns: GridColDef[] = [\n  { field: 'submask', headerName: 'Subnet Mask',width: 150 },\n  { field: 'osname', headerName: 'OS',width: 200 },\n  { field: 'cpuload', headerName: 'Load(~5min)',width: 150},\n  { field: 'processuptime', headerName: 'pUptime (Hours)',width: 200},\n  { field: 'date', headerName: 'Date',width: 150 },\n];\n\n\nfunction RaspberryStatsView(props){\n  return (\n    <div style={{height: \"90vh\"}}>\n    {props.items.length === 0 &&\n      <p> loading your stats please wait </p>}\n    {props.items.length > 0 &&\n      <DataGrid\n      rows={props.items}\n      columns={columns}\n      onSelectionModelChange={(newSelection) => {\n        props.didSelectMovie(props.items[newSelection[0]])\n      }}\n      />}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state){\n  return {\n    items: PiHistorySelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(RaspberryStatsView)\n","import React from 'react'\nimport {connect} from \"react-redux\"\nimport { createBrowserHistory } from \"history\";\nimport {BottomNavigation,BottomNavigationAction,Grid} from '@mui/material';\nimport {Restore} from '@mui/icons-material'\nimport ExploreIcon from '@mui/icons-material/Explore';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport MovieSearchCard from \"./components/MovieSearchCard\"\nimport PlainHtml5Viewr from \"./components/PlainHtml5Viewr\"\nimport RaspberryStatsView from \"./components/RaspberryStatsView\"\nimport {setTagsAction,setPiHistoryAction} from \"../actions\"\nimport { css, cx } from '@emotion/css'\n\nconst Navbar = props => {\n  let history = useHistory();\n\n   return (\n     <BottomNavigation\n       showLabels\n       value={\"Recents\"}\n       onChange={(event, newValue) => {\n         if(newValue === 0){\n           history.push(\"/server\")\n         }\n         else{\n           history.push(\"/movies\")\n         }\n       }}\n       >\n       <BottomNavigationAction label=\"Server\" icon={<Restore />} />\n       <BottomNavigationAction label=\"Explore\" icon={<ExploreIcon />} />\n     </BottomNavigation>\n   )\n}\n\nconst MiorrorNavBar = (props) => {\n  const mirrorContainer=css`\n  display: flex;\n  flex-wrap: no-wrap;\n  flex-direction: row;\n  `;\n  let mirrors = [\"http://10.0.0.114\",\"http://10.0.0.92\",\"http://10.0.0.237\"]\n\n  return (\n    <div>\n    <p>MIRRORS</p>\n    <div className={mirrorContainer}>\n    {mirrors.map(function(url,index){\n      return <button onClick={function(){\n        window.location.href = url;\n      }}\n      key={url}\n      >\n      Mirror {index+1}</button>\n    })}\n    </div>\n</div>)\n}\n\nclass Dashboard extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      tags: [],\n      isLoadingCommercial: false,\n      history: createBrowserHistory()\n    }\n    this.setValue = this.setValue.bind(this)\n    this.handleLoadTags = this.handleLoadTags.bind(this)\n    this.handleLoadPiHistory = this.handleLoadPiHistory.bind(this)\n  }\n  componentDidMount() {\n    this.handleLoadTags()\n    this.handleLoadPiHistory()\n    this.handleLoadUserHistory()\n    this.state.history.push(\"/movies\")\n  }\n\n  render(){\n    return (\n      <Router history={this.state.history}>\n      <div style={{height:\"100%\"}}>\n      {/*row  bottom /inset top inset?*/}\n      <MiorrorNavBar />\n      <Navbar />\n\n\n      <Route path=\"/server\">\n        <RaspberryStatsView />\n      </Route>\n\n      <Route path=\"/movies\">\n        <Grid container spacing={2} sx={{ height: '85%' }}>\n          <Grid item xs={4}>\n              {/*Column*/}<PlainHtml5Viewr url=\"/stream/asdf\" />\n          </Grid>\n          <Grid item xs={8}>\n            {/*browse menu, to find other files */}<MovieSearchCard />\n          </Grid>\n          <Grid item xs={12}>\n            <p>xs=4</p>  {/*explore the current epoch selecte and related items, if none there than suggest random items*/}\n          </Grid>\n        </Grid>\n      </Route>\n\n      </div>\n      </Router>\n    )\n  }\n\n\n  setValue(v){\n\n  }\n\n  handleLoadRelatedContent(movie){\n\n  }\n  handleLoadUserHistory(){\n    const userRecentItems = sessionStorage.getItem(\"Watch History\")\n  }\n  handleLoadPiHistory(){\n    const self = this;\n    fetch('/api/getAllPiStats')\n    .then(res => res.json())\n    .then(function(data){\n      self.props.setPiHistory(data)\n    })\n    .catch(function(e){\n      console.log(e);\n    })\n  }\n  handleLoadTags(){\n    const self = this;\n    fetch(\"/api/tags\")\n    .then(res => res.json())\n    .then(function(res){\n      self.props.setTags(res)\n    })\n    .catch(function(e){\n      console.log(e);\n    })\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    setPiHistory: (history) => dispatch(setPiHistoryAction(history)),\n    setTags: (tags) => dispatch(setTagsAction(tags)),\n    setRelatedContent: (key,content) => dispatch({type:\"RELATEDCONTENT\"}),\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(Dashboard)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\nimport {\n  DID_SELECT_MOVIE,\n  SET_TAGS,\n  SET_PI_CLUSTER_HISTORY,\n  SET_SEARCH_RESULTS\n} from \"../actions\"\n\n\nexport const initialState = {\n  history: {\n    pi: []\n\n  },\n  search: {\n    \"currentType\": \"filtered\",\n    \"random\": [],\n    \"popular\": [],\n    \"atoz\": [],\n    \"filtered\": [],\n    \"related\": [],\n  },\n  root: {\n    tags: [],\n    nextTagPage: 1,\n    selectedmovie: null,\n  },\n}\n\nfunction selected_xor(currid,nextid){\n\n}\n\nfunction RootReducer(state = initialState.root ,action){\n  switch(action.type){\n    case SET_TAGS:\n      return {\n        tags: action.payload.tags,\n        nextTagPage: action.payload.next\n      }\n    case DID_SELECT_MOVIE:\n      if(state.selectedmovie && state.selectedmovie.movieid == action.payload.movieid){\n        return {\n          ...state,\n          selectedmovie: null\n        }\n      } else {\n        return {\n          ...state,\n          selectedmovie: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n\nfunction HistoryReducer(state = initialState.history, action){\n  switch(action.type){\n    case SET_PI_CLUSTER_HISTORY:\n      return {\n        ...state,\n        pi: action.payload.map(function(stat){\n          let date = new Date(parseInt(stat.date));\n          let datearr = date.toString().split(\" \")\n          return {\n            ...stat,\n            id: stat.date,\n            processuptime: (parseInt(stat.processuptime) / 3600).toFixed(2),\n            osuptime: (parseInt(stat.osuptime) / 3600).toFixed(2),\n            date: `${datearr[1]} ${datearr[2]} @ ${datearr[4]}`\n          }\n        })\n      }\n    default:\n      return state\n  }\n}\n\nfunction SearchReducer(state = initialState.search, action){\n  switch(action.type){\n    case SET_SEARCH_RESULTS:\n      let type = state.currentType\n      console.log(type);\n      let newState = { ...state }\n      newState[type] = action.payload.map(function(movie,index){\n        return {\n          ...movie,\n          id: index,\n        }\n      })\n      return newState\n    default:\n      return state\n  }\n}\n\n\n\nexport default combineReducers({\n  history: HistoryReducer,\n  search: SearchReducer,\n  root: RootReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport App from './dashboard';\nimport reportWebVitals from './reportWebVitals';\nimport RootReducer from \"./reducers\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={createStore(RootReducer, {})}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}