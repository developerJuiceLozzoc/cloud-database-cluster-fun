{"version":3,"sources":["actions/index.js","reducers/selectors.js","explore-media/components/FilterButton.js","explore-media/components/TagSearch.js","explore-media/components/MovieResultGrid.js","dashboard/components/MovieSearchCard.js","dashboard/components/PlainHtml5Viewr.js","dashboard/components/RaspberryStatsView.js","dashboard/style/mirror.js","reducers/index.js","dashboard/index.js","reportWebVitals.js","index.js"],"names":["SET_TAGS","DID_SELECT_MOVIE","SET_PI_CLUSTER_HISTORY","SET_SEARCH_RESULTS","SET_PI_NAMES","SearchResultsSelector","state","key","includes","search","TagsSelector","createSelector","root","tags","PiHistorySelector","history","stats","CurrentSelectedMovieSelector","selectedmovie","PiIdentitiesSelector","names","SpecialButton","props","value","setValue","React","useState","varient","updateVarientEnum","styles","css","getColorOnValue","className","onClick","newValue","label","connect","dispatch","setSearchResults","results","console","log","type","payload","setSearchResultsAction","checked","setChecked","useSelector","postSearchRequest","query","querystuff","andtags","length","join","ortags","axios","get","queryString","stringify","then","res","data","a","j","x","i","Math","floor","random","shuffle","catch","e","TagButtons","map","tag","index","tagid","tagname","v","newState","Button","color","tagIdsSelectedArr","Object","keys","filter","alert","forEach","push","columns","field","headerName","width","CurrentSearchResultsTypeSelector","items","didSelectMovie","movie","didSelectMovieAction","style","height","rows","onSelectionModelChange","newSelection","MovieSearchTabRouter","route","TagSearch","setCurrentSearchResultType","selectedTabBarItem","tabBarChange","Card","sx","BottomNavigation","showLabels","onChange","event","BottomNavigationAction","icon","disabled","selectedvideo","isWatching","toggleIsWatching","useEffect","size","movie_size","path","filename","replace","controls","src","RaspberryStatsView","selectedpi","setSelectedPi","bind","pi","currid","nextid","this","submask","setState","selectedButtonStyles","unselectedButtonStyles","Grid","container","spacing","item","xs","Component","mirrors","initialState","nextTagPage","selected_xor","movieid","combineReducers","action","stat","datearr","Date","parseInt","date","toString","split","id","processuptime","toFixed","currentType","next","Navbar","useHistory","Restore","MiorrorNavBar","host","window","location","mirrorContainer","selectedButtonStyle","unselectedButtonStyle","TopLevelMirrorStyles","href","url","Dashboard","isLoadingCommercial","createBrowserHistory","handleLoadTags","handleLoadPiHistory","handleLoadUserHistory","self","fetch","json","setPiHistory","setPiNamesAction","setTags","setTagsAction","setRelatedContent","content","stuff","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","createStore","RootReducer","document","getElementById"],"mappings":"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","file":"static/js/main.79c0afa2.chunk.js","sourcesContent":["const SET_TAGS = \"TAGS_SET\"\n\nconst setTagsAction = (tags) => ({\n  type: SET_TAGS,\n  payload: tags,\n})\n\nconst DID_SELECT_MOVIE  = \"SELECTED_MOVIE_TO_WATCH\"\n\nconst didSelectMovieAction = (movie) => ({\n  type: DID_SELECT_MOVIE,\n  payload: movie,\n})\n\nconst SET_PI_CLUSTER_HISTORY = \"HISTORY_SET_PI_CLUSTER\"\n\nconst setPiHistoryAction = (arr) => {\n  return {\n    type: SET_PI_CLUSTER_HISTORY,\n    payload: arr\n  }\n}\n\nconst SET_SEARCH_RESULT_TYPE = \"SEARCH_SET_TYPE\"\nconst SET_SEARCH_RESULTS = \"SEARCH_SET_RESULTS\"\n\nconst SET_PI_NAMES = \"SET_PI_NAMES\";\n\nconst setPiNamesAction = (value) => {\n  return {\n    type: SET_PI_NAMES,\n    payload: value,\n  }\n}\n\n\nconst setCurrentSearchResultTypeAction = (value) => {\n  const strs = [\"filtered\",\"random\",\"popular\",\"atoz\"]\n  return {\n    type: SET_SEARCH_RESULT_TYPE,\n    payload: strs[value]\n  }\n}\n\nconst setSearchResultsAction = (results) => {\n  console.log(\"setting search results\");\n  return {\n    type: SET_SEARCH_RESULTS,\n    payload: results,\n  }\n}\n\n\n\nexport {\nsetPiNamesAction,\n  setTagsAction,\n  setSearchResultsAction,\n  DID_SELECT_MOVIE,\n  SET_TAGS,\n  SET_PI_CLUSTER_HISTORY,\n  SET_SEARCH_RESULT_TYPE,\n  SET_PI_NAMES,\n  SET_SEARCH_RESULTS,\n  didSelectMovieAction,\nsetCurrentSearchResultTypeAction,\n  setPiHistoryAction\n}\n","\nimport { createSelector } from 'reselect'\n\n\nfunction SearchResultsSelector(state,key){\n  if([\"random\",\"popular\",\"atoz\",\"filtered\",\"related\"].includes(key)){\n    return state.search[key]\n  }\n  else {\n    return undefined\n  }\n}\n\n\nconst TagsSelector = createSelector(\n  (state) => state.root,\n  (root) => root.tags\n)\n\nfunction CurrentSearchResultsTypeSelector(state){\n  return state.search[\"currentType\"];\n}\n\nfunction PiHistorySelector(state){\n  return state.history.stats\n}\n\nfunction CurrentSelectedMovieSelector(state){\n  return state.root.selectedmovie;\n}\n\nfunction PiIdentitiesSelector(state){\n  return state.history.names\n}\n\n\nexport {\n  PiIdentitiesSelector,\n  CurrentSelectedMovieSelector,\nSearchResultsSelector,\nPiHistorySelector,\nCurrentSearchResultsTypeSelector,\nTagsSelector\n};\n","import React from 'react'\nimport { css } from '@emotion/css'\n\nfunction SpecialButton(props){\n  const {value,setValue} = props;\n  const [varient,updateVarientEnum] = React.useState(value);\n  const getColorOnValue = (value) => {\n    switch(value) {\n      case 1:\n        return \"green\"\n      case 2:\n        return \"#a9203e\"\n      default:\n        return \"white\"\n    }\n  }\n  let styles = css`\n   color: ${varient ? '#fff' : 'blue'};\n   background-color: ${getColorOnValue(varient)};\n   flex-wrap: wrap;\n   padding: 8px;\n   margin: 5px;\n   overflow-y: auto;\n `;\n\n  return (\n    <button\n      className={styles}\n      onClick={function(){\n        let newValue = varient ? varient : 0\n          setValue((newValue+1)%3)\n          updateVarientEnum((newValue+1)%3)\n      }}>\n      {props.label}\n    </button>)\n}\n\n\nexport default SpecialButton\n","import React,{useState} from 'react'\nimport {connect} from 'react-redux'\nimport axios from 'axios';\nimport queryString from \"query-string\"\n\n\nimport {TagsSelector} from \"../../reducers/selectors\"\nimport SpecialButton from \"./FilterButton\"\nimport {setSearchResultsAction} from \"../../actions\"\nimport {Button} from '@mui/material';\nimport { useSelector } from 'react-redux'\n\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nfunction TagSearchView(props){\n  const [checked,setChecked] = useState({})\n  const tags = useSelector(TagsSelector)\n\n  const postSearchRequest = (query) => {\n    let querystuff = {}\n    if(query.andtags.length > 0){\n      querystuff.andtags = query.andtags.join(\",\")\n    }\n    if(query.ortags.length > 0 ){\n      querystuff.ortags = query.ortags.join(\",\")\n    }\n    querystuff.type = query.type\n\n    if(query.ortags.length > 0 || query.andtags.length > 0 ){\n      axios.get(`/api/search/movies?${queryString.stringify(querystuff)}`)\n      .then(function(res){\n        console.log(res.data);\n        props.setSearchResults(shuffle(res.data))\n      })\n      .catch((e)=>{})\n    }\n  }\n  const TagButtons = tags.map(function(tag,index){\n      return  <SpecialButton\n      key={`tagname-${tag.tagid}`}\n      value={checked[tag.tagid]}\n      label={tag.tagname}\n      setValue={function(v){\n        let newState = {\n          ...checked\n        }\n        newState[`${tag.tagid}`] = v\n        setChecked(newState)\n      }}\n    />\n  })\n\n  return (<>\n    <p> Red means AND, Green means OR</p>\n    <div>\n      {tags.length > 0 && TagButtons }\n    </div>\n    <Button\n      varient=\"contained\"\n      color=\"success\"\n      onClick={function(){\n        const tagIdsSelectedArr = Object.keys(checked).filter(function(key){\n          return checked[key] > 0\n        })\n\n        if(tagIdsSelectedArr.includes(\"1\") && tagIdsSelectedArr.includes(\"25\")){\n          alert(\"You cannot fetch results for movies and tvs at the same time it would suck :P\")\n          return\n        }\n      let query = {\n        andtags: [],\n        ortags: [],\n        type: tagIdsSelectedArr.includes(\"1\") ? \"movie\" : \"tvshow\",\n      }\n      tagIdsSelectedArr.forEach(function(key){\n        switch(checked[key]){\n          case 1:\n            query.ortags.push(key)\n            break;\n          case 2:\n            query.andtags.push(key)\n            break;\n          default:\n            break;\n        }\n      })\n      postSearchRequest(query)\n    }} >Search</Button>\n   </>\n  );\n}\n\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    setSearchResults: (results) => dispatch(setSearchResultsAction(results)),\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(TagSearchView)\n","import React from 'react'\nimport {connect} from \"react-redux\"\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport {\n  CurrentSearchResultsTypeSelector,\n  SearchResultsSelector} from \"../../reducers/selectors\"\nimport {didSelectMovieAction} from \"../../actions/index.js\"\n\nconst columns: GridColDef[] = [\n  { field: 'leecher', headerName: 'Leecher',width: 150 },\n  { field: 'title', headerName: 'Title',width: 300},\n  { field: 'epoch', headerName: 'Epoch',width: 150},\n  { field: 'size', headerName: '(GB)' },\n  { field: 'year', headerName: 'Year' },\n  { field: 'episode', headerName: 'Ep' },\n];\n\nfunction MovieGrid(props) {\n\n  return (\n    <div style={{ height: \"68%\", width: '100%' }}>\n      {props.items.length > 0 && <DataGrid\n        rows={props.items}\n        onSelectionModelChange={(newSelection) => {\n          props.didSelectMovie(props.items[newSelection[0]])\n        }}\n        columns={columns}\n        />}\n\n\n    </div>\n  );\n}\n\n\nfunction mapStateToProps(state){\n  const type =  CurrentSearchResultsTypeSelector(state,SearchResultsSelector(state));\n  return {\n    items: SearchResultsSelector(state,type)\n  }\n}\nfunction mapDispatchToProps(dispatch){\n  return {\n    didSelectMovie: (movie) => dispatch(didSelectMovieAction(movie))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieGrid);\n","import React, {useState} from 'react'\n// import PropTypes from 'prop-types';\nimport {connect} from \"react-redux\"\n\nimport {BottomNavigation,BottomNavigationAction, Card} from '@mui/material';\n\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport StarOutlineIcon from '@mui/icons-material/StarOutline';\n\n\n\nimport {setCurrentSearchResultTypeAction} from \"../../actions\"\nimport TagSearchView from \"../../explore-media/components/TagSearch\"\nimport MovieSearchResults from \"../../explore-media/components/MovieResultGrid\"\n\nfunction MovieSearchTabRouter(props){\n  const {route} = props;\n  switch(route){\n    case 0:\n      return (<TagSearchView />)\n    case 1:\n      return (<p>Random</p>)\n    case 2:\n      return (\n        <p>Popular</p>\n      )\n    default:\n      return (\n        <p>AtoZ</p>\n      )\n  }\n}\n\n\nfunction MovieSearchCard(props){\n  const [selectedTabBarItem,tabBarChange] = useState(0)\n\n  return (<Card sx={{ height: '100%' }}>{/*row  bottom /inset top inset?*/}\n    <MovieSearchTabRouter route={selectedTabBarItem} />\n    <MovieSearchResults />\n    <BottomNavigation\n      showLabels\n      value={\"Recents\"}\n      onChange={(event, newValue) => {\n        console.log(newValue);\n        tabBarChange(newValue);\n        props.setCurrentSearchResultType(newValue)\n      }}\n      >\n      <BottomNavigationAction label=\"Filter\" icon={<FilterAltIcon />} />\n      <BottomNavigationAction label=\"Random\" icon={<ShuffleIcon />} />\n      <BottomNavigationAction disabled label=\"Popular\" icon={<StarOutlineIcon color=\"disabled\"/>} />\n      <BottomNavigationAction disabled label=\"A-Z\" icon={<TimelineIcon color=\"disabled\"/>} />\n    </BottomNavigation>\n  </Card>);\n}\n\n\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    setCurrentSearchResultType: (type) => dispatch(setCurrentSearchResultTypeAction(type)),\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(MovieSearchCard);\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport queryString from \"query-string\"\n\n\nimport {CurrentSelectedMovieSelector} from \"../../reducers/selectors\"\n\n\n\nfunction PlainHtml5Viewr(props){\n  const [isWatching, toggleIsWatching] = React.useState(false);\n  React.useEffect(function(){\n    if(!!props.selectedvideo){\n      toggleIsWatching(false)\n    }\n  },[props.selectedvideo])\n  //.replace(\"/home/pi/Videos/\",\"/home/pi/Desktop/My Passport/videos/\")\n  let query =  !!props.selectedvideo ? queryString.stringify({\n    size: props.selectedvideo.movie_size,\n    path: props.selectedvideo.filename.replace(\"/home/pi/Videos/\",\"/run/media/pi/My Passport/videos/\"),\n  }) : null;\n\n  if(!!props.selectedvideo){\n    console.log(`http://10.0.0.227:4444/stream?${query}`);\n  }\n  return (\n    <div>\n      {!!props.selectedvideo && !isWatching && <div>\n        {Object.keys(props.selectedvideo).map(function(key){\n          return <div key={`video: ${key}`}><p>{props.selectedvideo[key]}</p></div>\n        })}\n        <button onClick={function(){ toggleIsWatching(true)}}>WatchNow!</button>\n        </div>\n      }\n      {!!props.selectedvideo && isWatching && <div>\n        <video controls width=\"100%\">\n        <source src={`http://10.0.0.227:4444/stream?${query}`}\n                type=\"video/mp4\" />\n        Sorry, your browser doesn't support embedded videos.\n        </video>\n        <button onClick={function(){ toggleIsWatching(false)}}>StopWatching</button>\n        </div>\n      }\n    </div>\n    )\n}\n\nfunction mapStateToProps(state){\n  return {\n    selectedvideo: CurrentSelectedMovieSelector(state),\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(PlainHtml5Viewr)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"@mui/material\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { PiHistorySelector,PiIdentitiesSelector } from \"../../reducers/selectors\";\nimport { css } from '@emotion/css'\n\nexport function piselected_xor(currid,nextid){\n  if(!currid){\n    return true\n  } else if(currid.submask === nextid){\n    return false\n  }\n  else {\n    return true\n  }\n}\nconst columns: GridColDef[] = [\n  { field: \"submask\", headerName: \"Subnet Mask\", width: 150 },\n  { field: \"cpuload\", headerName: \"Load(~5min)\", width: 200 },\n  { field: \"processuptime\", headerName: \"pUptime (Hours)\", width: 200 },\n  { field: \"date\", headerName: \"Date\", width: 200 },\n];\n\nclass RaspberryStatsView extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      selectedpi: null,\n    }\n    this.setSelectedPi = this.setSelectedPi.bind(this)\n  }\n  setSelectedPi(pi){\n    if(piselected_xor(this.state.selectedpi,pi.submask)){\n      this.setState({\n        selectedpi: pi\n      })\n    } else {\n      this.setState({\n        selectedpi: null\n      })\n    }\n  }\n  render(){\n    const selectedpi = this.state.selectedpi;\n    const selectedButtonStyles = css`\n    height: 40px;\n    width: 80px;\n    border: 3px solid green;\n    `;\n    const unselectedButtonStyles = css`\n    height: 35px;\n    width: 75px;\n    border: 1px solid black;\n    `;\n    const setSelectedPi = this.setSelectedPi;\n    return (\n      <Grid container spacing={2} sx={{ height: \"90vh\" }}>\n        <Grid item xs={4}>\n          <p> Click on a identity below to view its stats and information</p>\n          <div className='mirror-container'>\n          {this.props.names.map(function(pi){\n            return <button\n             className={selectedpi && selectedpi.submask === pi.submask ? selectedButtonStyles : unselectedButtonStyles }\n             key={`infotainment-${pi.submask}`}\n             onClick={() => setSelectedPi(pi)}>\n             {pi.submask}\n            </button>\n          })}\n          </div>\n          {/*Column*/}\n          {!!selectedpi && (\n            <div>\n              {Object.keys(selectedpi).map(function (key) {\n                return (\n                  <div key={`video: ${key}`}>\n                    <p>{selectedpi[key]}</p>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={8}>\n          {/*browse menu, to find other files */}\n          <DataGrid\n            rows={this.props.items}\n            columns={columns}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    names: PiIdentitiesSelector(state) ?? [],\n    items: PiHistorySelector(state) ?? [],\n  };\n}\n\n\nexport default connect(mapStateToProps)(RaspberryStatsView);\n","import { css } from '@emotion/css'\n\n\n\nconst style = css`\n *,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n*:focus,\n*::before:focus,\n*::after:focus {\n  outline: none;\n}\n*::-webkit-input-placeholder,\n*::before::-webkit-input-placeholder,\n*::after::-webkit-input-placeholder {\n  color: #222;\n}\n*::-moz-placeholder,\n*::before::-moz-placeholder,\n*::after::-moz-placeholder {\n  color: #222;\n}\n\n\nbutton {\n  border: 0;\n}\nbutton:focus {\n  border: none;\n  outline: 0 !important;\n  outline-style: none;\n}\n\n.container {\n  width: 550px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}\n.container .btn {\n  position: relative;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  transition: all 100ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  box-shadow: 0px -6px 10px white, 0px 4px 15px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n}\n.container .btn:after {\n  content: \"\";\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  z-index: 2;\n}\n.container .btn:active {\n  box-shadow: 0 15px 20px rgba(0, 0, 0, 0.02);\n}\n.container .btn:active:after {\n  box-shadow: inset 0px -2px 5px white, inset 0px 2px 5px rgba(0, 0, 0, 0.15);\n}\n.container .btn.active.play-pause .icon.pause {\n  opacity: 1;\n  transform: translate(-50%, -50%);\n}\n.container .btn.active.play-pause .icon.play {\n  opacity: 0;\n  transform: translate(-50%, 50%);\n}\n.container .btn .icon-container,\n.container .btn a {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.container .btn a {\n  z-index: 10;\n}\n.container .btn .icon {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: inline-block;\n  fill: #868686;\n  height: 1.4rem;\n  vertical-align: middle;\n  width: 1.4rem;\n  transition: all 100ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n.container .btn.play-pause .icon.pause {\n  opacity: 0;\n  transform: translate(-50%, 50%);\n}\n.container .btn.volume-control {\n  height: 160px;\n  border-radius: 50px;\n}\n.container .btn.volume-control::after {\n  border-radius: 50px;\n}\n.container .btn.volume-control .icon-container {\n  height: 50%;\n}\n.container .btn.volume-control .icon-container:last-child {\n  transform: translateY(100%);\n}\n.container .btn.volume-control .icon {\n  width: 1.6rem;\n  height: 1.6rem;\n}\n.container .btn.volume-control .icon.plus {\n  transform: translate(-50%, -50%);\n}\n.container .btn.volume-control .icon.minus {\n  transform: translate(-50%, -50%);\n}\n`;\n\nexport default style\n","import { combineReducers } from 'redux'\nimport {\n  DID_SELECT_MOVIE,\n  SET_TAGS,\n  SET_PI_CLUSTER_HISTORY,\n  SET_SEARCH_RESULTS,\n  SET_PI_NAMES\n} from \"../actions\"\n\n\nexport const mirrors = [\"10.0.0.245\",\"10.0.0.116\",\"10.0.0.92\",\"10.0.0.237\",\"10.0.0.223\"]\n\n\nexport const initialState = {\n  history: {\n    pi: []\n\n  },\n  search: {\n    \"currentType\": \"filtered\",\n    \"random\": [],\n    \"popular\": [],\n    \"atoz\": [],\n    \"filtered\": [],\n    \"related\": [],\n  },\n  root: {\n    tags: [],\n    nextTagPage: 1,\n    selectedmovie: null,\n  },\n}\n\nexport function selected_xor(currid,nextid){\n  if(!currid){\n    return true\n  } else if(currid.movieid === nextid){\n    return false\n  }\n  else {\n    return true\n  }\n}\n\nfunction RootReducer(state = initialState.root ,action){\n  switch(action.type){\n    case SET_TAGS:\n      return {\n        tags: action.payload.tags,\n        nextTagPage: action.payload.next\n      }\n    case DID_SELECT_MOVIE:\n    if(!selected_xor(state.selectedmovie,action.payload.movieid)) {\n        return {\n          ...state,\n          selectedmovie: null\n        }\n      } else {\n        return {\n          ...state,\n          selectedmovie: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n\nfunction HistoryReducer(state = initialState.history, action){\n  switch(action.type){\n    case SET_PI_CLUSTER_HISTORY:\n      return {\n        ...state,\n        stats: action.payload.map(function(stat){\n          let date = new Date(parseInt(stat.date));\n          let datearr = date.toString().split(\" \")\n          return {\n            ...stat,\n            id: stat.date,\n            processuptime: (parseInt(stat.processuptime) / 3600).toFixed(2),\n            date: `${datearr[1]} ${datearr[2]} @ ${datearr[4]}`\n          }\n        })\n      }\n    case SET_PI_NAMES:\n      return {\n        ...state,\n        names: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nfunction SearchReducer(state = initialState.search, action){\n  switch(action.type){\n    case SET_SEARCH_RESULTS:\n      let type = state.currentType\n      console.log(type);\n      let newState = { ...state }\n      newState[type] = action.payload.map(function(movie,index){\n        return {\n          ...movie,\n          id: index,\n        }\n      })\n      return newState\n    default:\n      return state\n  }\n}\n\n\n\nexport default combineReducers({\n  history: HistoryReducer,\n  search: SearchReducer,\n  root: RootReducer,\n});\n","import React from 'react'\nimport {connect} from \"react-redux\"\nimport { createBrowserHistory } from \"history\";\nimport {BottomNavigation,BottomNavigationAction,Grid} from '@mui/material';\nimport {Restore} from '@mui/icons-material'\nimport ExploreIcon from '@mui/icons-material/Explore';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport MovieSearchCard from \"./components/MovieSearchCard\"\nimport PlainHtml5Viewr from \"./components/PlainHtml5Viewr\"\nimport RaspberryStatsView from \"./components/RaspberryStatsView\"\nimport {setTagsAction,setPiHistoryAction,setPiNamesAction} from \"../actions\"\nimport { css } from '@emotion/css'\nimport TopLevelMirrorStyles from \"./style/mirror.js\"\nimport {mirrors} from \"../reducers\"\nconst Navbar = props => {\n  let history = useHistory();\n\n   return (\n     <BottomNavigation\n       showLabels\n       value={\"Recents\"}\n       onChange={(event, newValue) => {\n         if(newValue === 0){\n           history.push(\"/server\")\n         }\n         else{\n           history.push(\"/movies\")\n         }\n       }}\n       >\n       <BottomNavigationAction label=\"Server\" icon={<Restore />} />\n       <BottomNavigationAction label=\"Explore\" icon={<ExploreIcon />} />\n     </BottomNavigation>\n   )\n}\n\nconst MiorrorNavBar = (props) => {\n  const host = window.location.host;\n  const mirrorContainer=css`\n    display: flex;\n    flex-wrap: no-wrap;\n    flex-direction: row;\n  `;\n  const selectedButtonStyle = css`\n    color: green;\n  `;\n  const unselectedButtonStyle = css`\n  border-color: #121212;\n  background: 'white';\n  `;\n\n  // const mirrorButtonSelectedStyle=css`\n  // `;\n\n  return (\n    <div className={TopLevelMirrorStyles}>\n      <p>MIRRORS - Click differnt one if search results are slow</p>\n      <div className={`${mirrorContainer} container`}>\n        <a href=\"http://localhost:3000\">\n        <button\n          className={`btn play-pause ${host.includes('localhost:3000') ? selectedButtonStyle : unselectedButtonStyle}`}\n          key={'http://localhost:3000'}\n          >\n          <div className=\"icon-container\">\n          <p>Dev Mirror</p>\n          </div>\n        </button>\n        </a>\n\n        {mirrors.map(function(url,index){\n          console.log(url);\n          return (\n            <a href={`http://${url}`}\n              key={url}\n              >\n            <button className=\"btn play-pause\">\n            {host.includes(url) && <button className=\"btn play-pause\">\n          \t\t<div className={`icon-container ${selectedButtonStyle}`}>\n          \t\t\t<p>Selected</p>\n          \t\t</div>\n            </button>}\n          \t{!host.includes(url)\t&& <div className={`icon-container ${unselectedButtonStyle}`}>\n                <button>\n                  Mirror {index+1}\n                </button>\n          \t\t</div>}\n              </button>\n              </a>)\n        })}\n    </div>\n  </div>\n  )\n}\n\nclass Dashboard extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      tags: [],\n      isLoadingCommercial: false,\n      history: createBrowserHistory()\n    }\n    this.setValue = this.setValue.bind(this)\n    this.handleLoadTags = this.handleLoadTags.bind(this)\n    this.handleLoadPiHistory = this.handleLoadPiHistory.bind(this)\n  }\n  componentDidMount() {\n    this.handleLoadTags()\n    this.handleLoadPiHistory()\n    this.handleLoadUserHistory()\n    this.state.history.push(\"/movies\")\n  }\n\n  render(){\n    return (\n      <Router history={this.state.history}>\n      <div style={{height:\"100vh\"}}>\n      {/*row  bottom /inset top inset?*/}\n      <MiorrorNavBar />\n      <Navbar />\n\n\n      <Route path=\"/server\">\n        <RaspberryStatsView />\n      </Route>\n\n      <Route path=\"/movies\">\n        <Grid container spacing={2} sx={{ height: \"90vh\" }}>\n          <Grid item xs={4}>\n              {/*Column*/}<PlainHtml5Viewr />\n              {/*explore the current epoch selecte and related items, if none there than suggest random items*/}<p>view History coming soon</p>\n          </Grid>\n          <Grid item xs={8}>\n            {/*browse menu, to find other files */}<MovieSearchCard />\n          </Grid>\n        </Grid>\n      </Route>\n\n      </div>\n      </Router>\n    )\n  }\n\n\n  setValue(v){\n\n  }\n\n  handleLoadRelatedContent(movie){\n\n  }\n  handleLoadUserHistory(){\n    // const userRecentItems = sessionStorage.getItem(\"Watch History\")\n  }\n  handleLoadPiHistory(){\n    const self = this;\n    fetch('/api/pies/stats')\n    .then(res => res.json())\n    .then(function(data){\n      self.props.setPiHistory(data)\n    })\n    .catch(function(e){\n      console.log(e);\n    })\n    fetch('/api/pies/names')\n    .then(res => res.json())\n    .then(function(data){\n      self.props.setPiNamesAction(data)\n    })\n    .catch(function(e){\n      console.log(e);\n    })\n  }\n  handleLoadTags(){\n    const self = this;\n    fetch(\"/api/tags\")\n    .then(res => res.json())\n    .then(function(res){\n      self.props.setTags(res)\n    })\n    .catch(function(e){\n      console.log(e);\n    })\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    setPiHistory: (history) => dispatch(setPiHistoryAction(history)),\n    setTags: (tags) => dispatch(setTagsAction(tags)),\n    setRelatedContent: (key,content) => dispatch({type:\"RELATEDCONTENT\"}),\n    setPiNamesAction: (stuff) => dispatch(setPiNamesAction(stuff))\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(Dashboard)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport App from './dashboard';\nimport reportWebVitals from './reportWebVitals';\nimport RootReducer from \"./reducers\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={createStore(RootReducer, {})}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}